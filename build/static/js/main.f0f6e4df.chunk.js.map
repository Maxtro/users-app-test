{"version":3,"sources":["Components/users.module.css","Redux/reducer.js","Redux/selectors.js","Components/Users.jsx","Components/UsersContainer.jsx","Components/UserDetails.jsx","Components/UserDetailsContainer.jsx","Components/AddUser.jsx","Components/AddUserContainer.jsx","App.js","serviceWorker.js","Redux/Api.js","Redux/sagas.js","Redux/store.js","index.js"],"names":["module","exports","initialState","users","currentUser","userId","editMode","total_pages","page","actions","type","totalPages","currentPage","reducer","state","action","getPage","getUserId","getFormData","form","editUser","getAddForm","addUser","getUsers","getTotalPages","getCurrentPage","getCurrentUser","getEditMode","Users","setCurrentPage","setCurrentUser","List","clearCurrentPageData","map","user","className","style","key","id","first_name","last_name","to","onClick","button","pages","i","push","textAlign","selected","pagenator","button_add","UsersContainer","React","memo","props","connect","dispatch","UserDetails","handleSubmit","setEditMode","deleteUser","onEdit","UserData","src","avatar","borderRadius","alt","fontSize","email","UserDataForm","onSubmit","Field","placeholder","component","name","link","reduxForm","compose","withRouter","match","params","useDispatch","useEffect","AddUser","useState","isRedirect","setRedirect","handleChange","event","input","preventDefault","imageFile","target","files","onChange","setTimeout","AddUserForm","App","users_page","exact","path","render","UserDetailsContainer","AddUserContainer","Boolean","window","location","hostname","instance","Axios","create","baseURL","Api","get","data","put","then","res","console","log","delete","post","watchLoadUsers","workLoadUsers","workLoadCurrentUser","workUpdateUser","workDeleteUser","workAddUser","takeEvery","select","usersData","userData","formData","values","formAddData","rootReduser","combineReducers","formReducer","sagaMiddleware","createSagaMiddleware","store","createStore","applyMiddleware","run","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.f0f6e4df.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"users_page\":\"users_users_page__39tmG\",\"user\":\"users_user__3JDJw\",\"button\":\"users_button__32rc0\",\"button_add\":\"users_button_add__2tA0g\",\"selected\":\"users_selected__1kR0l\",\"pagenator\":\"users_pagenator__5ThDg\",\"link\":\"users_link__29OJ6\"};","export const LOAD_USERS = 'USERS/LOAD_USERS'\nconst SET_USERS_DATA = 'USERS/SET_USERS_DATA'\nexport const SET_TOTAL_PAGE = 'USERS/SET_TOTAL_PAGE'\nconst SET_CURRENT_PAGE = 'USERS/SET_CURRENT_PAGE'\nexport const LOAD_CURRENT_USER = 'USERS/LOAD_CURRENT_USER'\nconst SET_CURRENT_USER = 'USERS/SET_CURRENT_USER'\nconst SET_USER_ID = 'USERS/SET_USER_ID'\nexport const UPDATE_USER = 'USERS/UPDATE_USER'\nconst SET_EDIT_MODE = 'USERS/SET_EDIT_MODE'\nexport const DELETE_USER = 'USERS/DELETE_USER'\nexport const ADD_USER = 'USERS/ADD_USER'\n\nlet initialState = {\n    users: [],\n    currentUser: {},\n    userId: 1,\n    editMode: false,\n    total_pages: 0,\n    page: 1,\n}\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n\n        case SET_USERS_DATA: {\n            return { ...state, users: action.users }\n        }\n\n        case SET_TOTAL_PAGE: {\n            return { ...state, total_pages: action.totalPages }\n        }\n\n        case SET_CURRENT_PAGE: {\n            return { ...state, page: action.currentPage }\n        }\n        \n        case SET_CURRENT_USER: {\n            return { ...state, currentUser: action.currentUser }\n        }\n\n        case SET_USER_ID: {\n            return { ...state, userId: action.userId }\n        }\n\n        case SET_EDIT_MODE: {\n            return { ...state, editMode: action.editMode }\n        }\n\n        default:\n            return state\n    }\n}\n\nexport const actions = {\n    loadUsers: () => ({ type: LOAD_USERS }),\n    setUsers: (users) => ({ type: SET_USERS_DATA, users}),\n    setTotalPages: (totalPages) => ({ type: SET_TOTAL_PAGE, totalPages }),\n    setCurrentPage: (currentPage) => ({ type: SET_CURRENT_PAGE, currentPage }),\n    loadCurrentUser: () => ({ type: LOAD_CURRENT_USER }),\n    setCurrentUser: (currentUser) => ({ type: SET_CURRENT_USER, currentUser }),\n    setUserId: (userId) => ({ type: SET_USER_ID, userId }),\n    updateUser: () => ({ type: UPDATE_USER }),\n    setEditMode: (editMode) => ({ type: SET_EDIT_MODE, editMode }),\n    deleteUser: () => ({ type: DELETE_USER }),\n    addUser: () => ({ type: ADD_USER })\n}\n\nexport default reducer\n","export const getPage = state => state.reducer.page\nexport const getUserId = state => state.reducer.userId\nexport const getFormData = state => state.form.editUser\nexport const getAddForm = state => state.form.addUser\nexport const getUsers = state => state.reducer.users\nexport const getTotalPages = state => state.reducer.total_pages\nexport const getCurrentPage = state => state.reducer.page\nexport const getCurrentUser = state => state.reducer.currentUser\nexport const getEditMode = state => state.reducer.editMode","import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport style from './users.module.css'\n\nconst Users = ({ users, totalPages, currentPage, setCurrentPage, setCurrentUser }) => {\n\n    const List = () => {\n\n        const clearCurrentPageData = () => {\n            setCurrentUser()\n        }\n\n        return (\n            <div>\n                {\n                    users.map(user => {\n                        return(\n                            <div className={style.user} key={user.id}>\n                                <div><b>{user.first_name}</b> {user.last_name}</div>\n                                <div>\n                                    <NavLink to={`/user/${user.id}`}>\n                                        <button onClick={clearCurrentPageData} className={style.button}>Подробнее</button>\n                                    </NavLink>\n                                </div>\n                            </div>\n                        )\n                    })\n                }\n            </div>\n        )\n    }\n\n    const pages = []\n    for(let i=1; i <= totalPages; i++){\n        pages.push(i)\n    }\n        \n        return <>\n            <div>\n                <div style={{ textAlign: \"center\" }}>\n                    {\n                        pages.map(page => {\n                            return <span key={page}>\n                                    <span \n                                        onClick={() => {setCurrentPage(page)}} \n                                        className={ currentPage === page ? \n                                        style.selected : style.pagenator } >\n                                        { page }\n                                    </span>&nbsp;\n                                    </span>\n                        })\n                    }\n                </div>\n                <List users={users} />\n                <div style={{ textAlign: 'center' }}>\n                    <NavLink to={'/add-user'}>\n                        <button className={`${style.button_add} ${style.button}`}>Добавить</button>\n                    </NavLink>\n                </div>\n                \n            </div>\n        </>\n    }\n\nexport default Users","import React from 'react'\nimport { connect } from 'react-redux'\nimport { getUsers, getTotalPages, getCurrentPage } from '../Redux/selectors'\nimport Users from './Users'\nimport { actions } from '../Redux/reducer'\n\n\nconst UsersContainer = React.memo((props) => {\n        return <Users {...props}/>\n    }\n)\n\nlet mapStateToProps = (state) => {\n    return {\n        users: getUsers(state),\n        totalPages: getTotalPages(state),\n        currentPage: getCurrentPage(state)\n    }\n}\n\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        setCurrentPage: (currentPage) => {\n            dispatch(actions.setCurrentPage(currentPage))\n            dispatch(actions.loadUsers())\n        },\n        setCurrentUser: () => {\n            let clearUserData = {}\n            dispatch(actions.setCurrentUser(clearUserData))\n        }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UsersContainer) ","import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport { Field } from 'redux-form'\nimport style from './users.module.css'\n\nconst UserDetails = ({currentUser, handleSubmit, editMode, setEditMode, deleteUser}) => {\n\n    const onEdit = () => {\n        setEditMode(true)\n    }\n\n    const UserData = () => {\n\n        const onDeleteUser = () => {\n            deleteUser()\n        }\n\n        return (\n            <>\n            <div>\n                <img src={currentUser.avatar} style={{ borderRadius: 10 }} alt={''} />\n                {/* <input type={'file'} /> */}\n            </div>\n            <div>\n                <b>{currentUser.first_name}</b>\n                <div>{currentUser.last_name}</div>\n                <div style={{ fontSize:13 }}>{currentUser.email}</div>\n                <p></p>\n                <div> <button onClick={onEdit}>Редактировать</button></div>\n                <p></p>\n                <div> \n                    <NavLink to={'/'}>\n                    <button onClick={onDeleteUser}>Удалить</button>\n                    </NavLink>\n                </div>\n                \n            </div>\n        </>\n        )\n    }\n\n    const UserDataForm = () => {\n        return <>\n            <div><img src={currentUser.avatar} style={{ borderRadius: 10 }} alt={''} /></div>\n            <form onSubmit={handleSubmit}>\n                <Field placeholder={currentUser.first_name} component={'input'} type={'text'} name={'first_name'} />\n                <Field placeholder={currentUser.last_name} component={'input'} type={'text'} name={'last_name'} />\n                <Field placeholder={currentUser.email} component={'input'} type={'text'} name={'email'} />\n                <p></p>\n                <div> <button type='submit'>Сохранить</button></div>\n            </form>\n        </>\n    }\n\n    return <>\n                <div className={style.user}>\n                    {\n                        currentUser ? \n                        editMode ? <UserDataForm />  : <UserData />\n                        : null\n                    }\n                </div>\n                <NavLink to={'/'}>\n                    <div className={style.link}>Назад</div>\n                </NavLink>\n            </>\n}\n\nexport default UserDetails","import React, {useEffect} from 'react'\nimport { connect } from 'react-redux'\nimport { compose } from 'redux'\nimport { reduxForm } from 'redux-form'\nimport { useDispatch } from 'react-redux'\nimport { withRouter } from 'react-router-dom'\nimport UserDetails from './UserDetails'\nimport { getCurrentUser, getEditMode } from '../Redux/selectors'\nimport { actions } from '../Redux/reducer'\n\nconst UserDataForm = reduxForm({form: 'editUser'})(UserDetails)\n\nconst UserDetailsContainer = (props) => {\n\n  let userId = props.match.params.id\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    dispatch(actions.setUserId(userId))\n    dispatch(actions.loadCurrentUser())\n  },[dispatch, userId])\n\n  const onSubmit = () => {\n    dispatch(actions.updateUser())\n    dispatch(actions.setUserId(userId))\n    dispatch(actions.loadCurrentUser())\n    props.setEditMode(false)\n  }\n\n    return <UserDataForm \n        currentUser = {props.currentUser} onSubmit={onSubmit} \n        editMode={props.editMode} setEditMode={props.setEditMode}\n        deleteUser={props.deleteUser}\n    />\n}\n\nlet mapStateToProps = (state) => {\n    \n    return {\n      currentUser: getCurrentUser(state),\n      editMode: getEditMode(state)\n    }\n}\n\nlet mapDispatchToProps = (dispatch) => {\n  return {\n      setEditMode: (editMode) => {\n          dispatch(actions.setEditMode(editMode))\n      },\n      deleteUser: () => {\n        dispatch(actions.deleteUser())\n      } \n  }\n}\n\nexport default compose(\n  connect(mapStateToProps, mapDispatchToProps),\n  withRouter\n) (UserDetailsContainer)","import React, { useState } from 'react'\nimport { Field } from 'redux-form'\nimport { NavLink } from 'react-router-dom'\nimport { Redirect } from 'react-router-dom'\nimport style from './users.module.css'\n\nconst AddUser = ({handleSubmit}) => {\n\n    const[isRedirect, setRedirect] = useState(false)\n\n    const inputComponent = ({ input, type }) => {\n        return (\n            <input name={input.name} type={type} onChange={event => handleChange(event, input)}/>\n        )\n      }\n\n    const handleChange = (event, input) => {\n        event.preventDefault();\n        let imageFile = event.target.files[0];\n        input.onChange(imageFile);\n      }\n\n    const redirectToMainPage = () => {\n        setTimeout(() => {\n            setRedirect(true)\n        }, 1000)\n    }\n\n    if(isRedirect) return <Redirect to={'/'} />\n\n    return <>\n        <div className={style.user}>\n            <form onSubmit={handleSubmit}>\n                <Field placeholder={'First name'} component={'input'} type={'text'} name={'first_name'} />\n                <Field placeholder={'Last name'} component={'input'} type={'text'} name={'last_name'} />\n                <Field placeholder={'Email'} component={'input'} type={'text'} name={'email'} />\n                <Field name=\"avatar\" type=\"file\" component={inputComponent} />\n                <p></p>\n                <div><button onClick={redirectToMainPage} type='submit'>Сохранить</button></div>\n            </form>\n        </div>\n        <NavLink to={'/'}>\n            <div className={style.link}>Назад</div>\n        </NavLink>\n    </>\n}\n\nexport default AddUser","import React from 'react'\nimport { reduxForm } from 'redux-form'\nimport { connect } from 'react-redux'\nimport AddUser from './AddUser'\nimport { actions } from '../Redux/reducer'\n\n\nconst AddUserForm = reduxForm({form: 'addUser'})(AddUser)\n\nconst AddUserContainer = (props) => {\n\n    const onSubmit = () => {\n        props.addUser()\n      }\n\n    return <AddUserForm onSubmit={onSubmit}  />\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        addUser: () => {\n            dispatch(actions.addUser())\n        }\n    }\n}\n\nexport default connect(null, mapDispatchToProps)(AddUserContainer)","import React, {useEffect} from 'react'\nimport { Route } from 'react-router-dom'\nimport { useDispatch } from 'react-redux'\nimport { actions } from './Redux/reducer'\nimport UsersContainer from './Components/UsersContainer'\nimport UserDetailsContainer from './Components/UserDetailsContainer'\nimport AddUserContainer from './Components/AddUserContainer'\nimport style from './Components/users.module.css'\n\nfunction App() {\n\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    dispatch(actions.loadUsers())\n  },[dispatch])\n\n\n  return (\n    <div>\n         <div className={style.users_page}>\n          <Route exact path='/' render={() => <UsersContainer />} />\n          <Route path='/user/:id' component={UserDetailsContainer} />\n          <Route path='/add-user' component={AddUserContainer} />\n        </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import Axios from 'axios'\n\nconst instance = Axios.create({\n    baseURL: 'https://reqres.in/api/users',\n})\n\nexport const Api = {\n    loadUsers(page){\n        return instance.get(`?page=${page}`)\n    },\n    loadCurrentUser(id){\n        return instance.get(`${id}`)\n    },\n    updateUser(id, data){\n        instance.put(`${id}`, data).then(res => console.log(res))\n    },\n    deleteUser(id){\n        instance.delete(`${id}`).then(res => console.log(res))\n    },\n    addUser(data){\n        instance.post(null, data).then(res => console.log(res))\n    },\n}","import { put, takeEvery, select } from 'redux-saga/effects'\nimport {LOAD_USERS, LOAD_CURRENT_USER, UPDATE_USER, DELETE_USER, ADD_USER, actions} from './reducer'\nimport { Api } from './Api'\nimport { getPage, getUserId, getFormData, getAddForm } from './selectors'\n\nexport function* watchLoadUsers(){\n   yield takeEvery(LOAD_USERS, workLoadUsers)\n   yield takeEvery(LOAD_CURRENT_USER, workLoadCurrentUser)\n   yield takeEvery(UPDATE_USER, workUpdateUser)\n   yield takeEvery(DELETE_USER, workDeleteUser)\n   yield takeEvery(ADD_USER, workAddUser)\n\n}\n\nfunction* workLoadUsers(){\n    let page = yield select(getPage)\n    const usersData = yield Api.loadUsers(page)\n    yield put(actions.setTotalPages(usersData.data.total_pages))\n    yield put(actions.setUsers(usersData.data.data))\n}\n\n\nfunction* workLoadCurrentUser(){\n    let userId = yield select(getUserId)\n    try{\n        const userData = yield Api.loadCurrentUser(userId)\n        yield put(actions.setCurrentUser(userData.data.data))\n    }catch(error){\n        console.log(error)\n    }\n}\n\nfunction* workUpdateUser(){\n    let userId = yield select(getUserId)\n    let formData = yield select(getFormData)\n    try{\n        yield Api.updateUser(userId, formData.values)\n    }catch(error){\n        console.log(error)\n    }\n}\n\nfunction* workDeleteUser(){\n    let userId = yield select(getUserId)\n    try{\n        yield Api.deleteUser(userId)\n    }catch(error){\n        console.log(error)\n    }\n}\n\nfunction* workAddUser(){\n    let formAddData = yield select(getAddForm)\n    try{\n        yield Api.addUser(formAddData.values)\n    }catch(error){\n        console.log(error)\n    }\n}","import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport createSagaMiddleware from 'redux-saga'\nimport { reducer as formReducer } from 'redux-form'\nimport reducer from './reducer'\nimport { watchLoadUsers } from './sagas'\n\nlet rootReduser = combineReducers({ \n    reducer,\n    form: formReducer\n})\nconst sagaMiddleware = createSagaMiddleware()\n\nlet store = createStore(rootReduser, applyMiddleware(sagaMiddleware))\n\nsagaMiddleware.run(watchLoadUsers)\n\nexport default store","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App';\nimport * as serviceWorker from './serviceWorker'\nimport { Provider } from 'react-redux'\nimport { HashRouter } from 'react-router-dom'\nimport store from './Redux/store'\n\nReactDOM.render(\n    <HashRouter>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </HashRouter>\n ,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}